create table if not exists posts (
    post_id integer generated by default as identity,
    post_title varchar(50) not null,
    post_content varchar(2048) not null,
    post_image_url varchar(256) not null,
    constraint pk_post_id primary key (post_id)
);

create table if not exists comments (
    comment_id integer generated by default as identity,
    post_id integer not null,
    comment_content varchar(300) not null,
    constraint pk_comment_id primary key (comment_id),
    constraint fk_comment_post foreign key (post_id) references posts (post_id) on delete cascade
);

create index if not exists idx_comments_post_id on comments (post_id);

create table if not exists tags (
    tag_id integer generated by default as identity,
    tag_name varchar(16) not null,
    constraint pk_tag_id primary key (tag_id)
);

create table if not exists posttags (
    posttags_id integer generated by default as identity,
    post_id integer not null,
    tag_id integer not null,
    constraint pk_posttags_id primary key (posttags_id),
    constraint fk_posttags_post_id foreign key (post_id) references posts(post_id) on delete cascade,
    constraint fk_posttags_tag_id foreign key (tag_id) references tags(tag_id) on delete set null,
    constraint uq_post_tag unique (post_id, tag_id)
);

create index if not exists idx_posttagspost_id on posttags (post_id);

create table if not exists postlikes (
    postlikes_id integer generated by default as identity,
    post_id integer not null,
    constraint pk_postlikes_id primary key (postlikes_id),
    constraint fk_postlikes_post_id foreign key (post_id) references posts(post_id) on delete cascade
);

create index if not exists idx_postlikes_post_id on postlikes (post_id);

-- insert into tags(tag_name) values
--     ('Компьютеры'),
--     ('Путешествия'),
--     ('Котики'),
--     ('Красивое');